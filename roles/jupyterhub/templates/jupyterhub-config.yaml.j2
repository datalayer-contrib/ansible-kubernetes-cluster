hub:
#  image:
#    name: lresende/k8s-hub
#    tag: latest
  db:
    type: sqlite-memory
  extraConfig: |-
    from kubespawner import KubeSpawner
    from tornado import gen
    import yaml

    class CustomKubeSpawner(KubeSpawner):
        def get_env(self):
            env = super().get_env()

            env['KG_HTTP_USER'] =  self.user.name
            env['KERNEL_USERNAME'] =  self.user.name

            return env
    c.JupyterHub.spawner_class = CustomKubeSpawner
    config = '/etc/jupyter/jupyter_notebook_config.py'
    c.Spawner.cmd = ['jupyter-labhub']
    c.KubeSpawner.namespace_name_template = 'hub-{username}'
proxy:
  secretToken: "{{ jupyterhub_secret_token }}"
  service:
     type: NodePort

auth:
  admin:
    users:
      - root
      - jovyan

ingress:
  enabled: true
  annotations:
    kubernetes.io/ingress.class: traefik
  hosts:
    - {{ groups['master'][0] }}.{{ ansible_domain }}

singleuser:
  defaultUrl: "/lab"
  image:
    name: elyra/nb2kg
    tag: dev
    # disable this in a production environment
    pullPolicy: "Always"
  storage:
    dynamic:
      storageClass: nfs-dynamic
  extraEnv:
    KG_URL: http://{{ groups['master'][0] }}.{{ ansible_domain }}/gateway
    KG_REQUEST_TIMEOUT: "60"

rbac:
  enabled: true

debug:
  enabled: true
