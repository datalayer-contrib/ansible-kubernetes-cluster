
# https://docs.projectcalico.org/v3.0/getting-started/kubernetes/installation/hosted/kubeadm/#requirements
# https://docs.projectcalico.org/getting-started/kubernetes/self-managed-onprem/onpremises
- name: Install Calico Network
  shell: |
    kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f https://docs.projectcalico.org/{{ calico_version }}/manifests/calico.yaml

# https://kubernetes.github.io/ingress-nginx/deploy/
# https://github.com/containous/traefik/blob/v1.7/examples/k8s/traefik-deployment.yaml
- name: Add Traefik Ingress deployment descriptor
  template:
    src: traefik-ingress.yaml.j2
    dest: "{{ install_temp_dir }}/traefik-ingress.yaml"
    mode: 0644

- name: Install Traefik Ingress Controller
  shell: |
    kubectl apply -f {{ install_temp_dir }}/traefik-ingress.yaml

- name: create install dir for Traefik certs
  file: path="{{ install_dir }}/traefik/ssl" state=directory

- name: Generate RSA Key for Traefik
  command: openssl genrsa \
    -out "{{ install_dir }}/traefik/ssl/key.pem" 2048
  args:
    creates: "{{ install_dir }}/traefik/ssl/key.pem"
  when: inventory_hostname in groups['master']

- name: Generate CSR for Traefik
  command: openssl req \
    -new \
    -subj '/C=US/ST=CA/L=San Jose/O=Traefik/CN={{ groups['master'][0] }}.{{ ansible_domain }}'
    -key "/opt/traefik/ssl/key.pem" \
    -out "/opt/traefik/ssl/csr.pem"
  args:
    creates: "{{ install_dir }}/traefik/ssl/csr.pem"
  when: inventory_hostname in groups['master']

- name: Generate Self-signed Certificate for Traefik
  command: openssl req \
    -x509 \
    -days 1825 \
    -key "{{ install_dir }}/traefik/ssl/key.pem" \
    -in "{{ install_dir }}/traefik/ssl/csr.pem" \
    -out "{{ install_dir }}/traefik/ssl/cert.pem"
  args:
    creates: "{{ install_dir }}/traefik/ssl/cert.pem"
  when: inventory_hostname in groups['master']

- name: Create K8s cert for Traefik
  shell: "kubectl -n kube-system create secret tls traefik-tls-cert --key={{ install_dir }}/traefik/ssl/key.pem --cert={{ install_dir }}/traefik/ssl/cert.pem"

# Reference - https://kubernetes.io/docs/tasks/access-application-cluster/web-ui-dashboard/
# Use the following for retrieving a bearer token
#  kubectl -n kubernetes-dashboard describe secret $(kubectl -n kubernetes-dashboard get secret | grep admin-user | awk '{print $1}')

- name: Install Dashboard
  shell: |
     kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v{{kube_dashboard_version}}/aio/deploy/alternative.yaml
#     kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v{{kube_dashboard_version}}/aio/deploy/recommended.yaml

- name: Add Dashboard Ingress deployment descriptor
  template:
    src: dashboard-ingress.yaml.j2
    dest: "{{ install_temp_dir }}/dashboard-ingress.yaml"
    mode: 0644

- name: Apply Dashboard Ingress
  shell: |
    kubectl apply -f {{ install_temp_dir }}/dashboard-ingress.yaml

- name: Helm/Tiller access manifest
  template:
    src: tiller-access.yaml.j2
    dest: "{{ install_temp_dir }}/tiller-access.yaml"
    mode: 0644

- name: Install Helm
  shell: |
    rm -rf /opt/helm
    rm -f /usr/local/bin/helm
    rm -f /usr/local/bin/tiller
    wget https://get.helm.sh/helm-v{{ helm_version }}-linux-amd64.tar.gz
    mkdir /opt/helm
    tar -xvf helm-v{{ helm_version }}-linux-amd64.tar.gz --strip 1 --directory /opt/helm
    rm helm-v{{ helm_version }}-linux-amd64.tar.gz
    chmod u+x /opt/helm/helm
    ln -s /opt/helm/helm /usr/local/bin/helm
    ln -s /opt/helm/tiller /usr/local/bin/tiller
    kubectl --kubeconfig=/etc/kubernetes/admin.conf apply -f {{ install_temp_dir }}/tiller-access.yaml
    /usr/local/bin/helm init --service-account tiller
